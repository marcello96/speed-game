/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/cooljs/engine.js":
/*!***************************************!*\
  !*** ./node_modules/cooljs/engine.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar utils = _interopRequireWildcard(__webpack_require__(/*! ./utils */ \"./node_modules/cooljs/utils.js\"));\n\nvar _tween = _interopRequireDefault(__webpack_require__(/*! ./tween */ \"./node_modules/cooljs/tween.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar requestAnimationFrameTool = utils.requestAnimationFrameTool,\n    isFunction = utils.isFunction,\n    isTouchDevice = utils.isTouchDevice;\n\nvar Engine =\n/*#__PURE__*/\nfunction () {\n  function Engine() {\n    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Engine);\n\n    if (!document.createElement('canvas').getContext) {\n      window.alert('HTML5 Canvas is not supported in your browser.'); // eslint-disable-line\n\n      return;\n    }\n\n    var canvasId = option.canvasId,\n        debug = option.debug,\n        width = option.width,\n        height = option.height,\n        highResolution = option.highResolution,\n        loadLimit = option.loadLimit,\n        soundOn = option.soundOn;\n    var canvasWidth = width || window.innerWidth;\n    var canvasHeight = height || window.innerHeight;\n    this.canvas = document.getElementById(canvasId);\n\n    if (highResolution) {\n      this.canvas.style.width = \"\".concat(canvasWidth, \"px\");\n      this.canvas.style.height = \"\".concat(canvasHeight, \"px\");\n      canvasWidth *= 2;\n      canvasHeight *= 2;\n    }\n\n    this.highResolution = highResolution;\n    this.canvas.width = canvasWidth;\n    this.canvas.height = canvasHeight;\n    this.width = this.canvas.width;\n    this.height = this.canvas.height;\n    this.calWidth = this.width * 0.5;\n    this.calHeight = this.height * 0.5; // general\n\n    this.debug = !!debug;\n    this.ctx = this.canvas.getContext('2d');\n    this.defaultLayer = 'default';\n    this.layerArr = [this.defaultLayer];\n    this.instancesObj = {};\n    this.instancesObj[this.defaultLayer] = [];\n    this.utils = utils;\n    this.customVariable = {};\n    var self = this;\n    this.isTouchDevice = isTouchDevice();\n    this.debugArr = []; // img\n\n    this.assetsObj = {\n      image: {},\n      audio: {}\n    };\n    this.assetsCount = {\n      image: 0,\n      audio: 0\n    };\n    this.assetsErrorQueue = [];\n    this.assetsErrorCount = 0;\n    this.loadLimit = loadLimit || 3; // audio\n\n    this.soundOn = !!soundOn; // time\n\n    this.fps = 0;\n    this.lastTime = 0;\n    this.lastPausedAt = 0;\n    this.pausedTime = 0;\n    this.paused = false;\n    this.timeMovement = {};\n    this.timeMovementStartArr = [];\n    this.timeMovementFinishArr = []; // keys\n\n    this.keyUpListeners = {};\n    this.keyDownListeners = {};\n    this.keyPressListeners = {}; // hooks\n\n    this.startAnimate = function () {};\n\n    this.paintUnderInstance = function () {};\n\n    this.paintAboveInstance = function () {};\n\n    this.endAnimate = function () {};\n\n    this.touchStartListener = function () {};\n\n    this.touchEndListener = function () {};\n\n    this.touchMoveListener = function () {}; // global event listener\n    // key\n\n\n    document.addEventListener('keyup', function (e) {\n      self.keyListener(e, 'keyup');\n    }, false);\n    document.addEventListener('keydown', function (e) {\n      self.keyListener(e, 'keydown');\n    }, false);\n    document.addEventListener('keypress', function (e) {\n      self.keyListener(e, 'keypress');\n    }, false); // touch\n\n    if (this.isTouchDevice) {\n      document.addEventListener('touchstart', function (e) {\n        self.touchStartListener(e);\n      }, false);\n      document.addEventListener('touchend', function (e) {\n        self.touchEndListener(e);\n      }, false);\n      document.addEventListener('touchmove', function (e) {\n        self.touchMoveListener(e);\n      }, false);\n    } else {\n      document.addEventListener('mousedown', function (e) {\n        self.touchStartListener(e);\n      }, false);\n      document.addEventListener('mouseup', function (e) {\n        self.touchEndListener(e);\n      }, false);\n      document.addEventListener('mousemove', function (e) {\n        self.touchMoveListener(e);\n      }, false);\n    }\n  }\n\n  _createClass(Engine, [{\n    key: \"addAudio\",\n    value: function addAudio(name, src) {\n      var _this = this;\n\n      var retry = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      if (!this.soundOn) return;\n      if (!retry) this.assetsCount.audio += 1;\n      var a = new window.Audio();\n      a.src = src; // a.addEventListener('canplaythrough', () => {\n      //   this.assetsObj.audio[name] = a\n      // }, false)\n      // bug sometime not trigger canplaythrough\n\n      this.assetsObj.audio[name] = a;\n      a.addEventListener('error', function () {\n        _this.assetsErrorQueue.push({\n          name: name,\n          src: src,\n          retry: retry + 1,\n          type: 'audio'\n        });\n      }, false);\n      a.load();\n    }\n  }, {\n    key: \"getAudio\",\n    value: function getAudio(name) {\n      return this.assetsObj.audio[name];\n    }\n  }, {\n    key: \"playAudio\",\n    value: function playAudio(name) {\n      var loop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!this.soundOn) return;\n      var audio = this.getAudio(name); // const audio = document.getElementById(name)\n\n      if (audio) {\n        audio.play();\n        if (!loop) return;\n        audio.addEventListener('ended', function () {\n          audio.currentTime = 0;\n          audio.play();\n        }, false);\n      }\n    }\n  }, {\n    key: \"pauseAudio\",\n    value: function pauseAudio(name) {\n      var audio = this.getAudio(name);\n\n      if (audio) {\n        audio.pause();\n      }\n    }\n  }, {\n    key: \"setVariable\",\n    value: function setVariable(key, value) {\n      this.customVariable[key] = value;\n    }\n  }, {\n    key: \"getVariable\",\n    value: function getVariable(key) {\n      var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var customVariable = this.customVariable[key];\n\n      if (customVariable) {\n        return customVariable;\n      }\n\n      if (defaultValue !== null) {\n        this.setVariable(key, defaultValue);\n        return defaultValue;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"addImg\",\n    value: function addImg(name, src) {\n      var _this2 = this;\n\n      var retry = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      if (!retry) this.assetsCount.image += 1;\n      var i = new window.Image();\n      i.src = src;\n\n      i.onload = function () {\n        _this2.assetsObj.image[name] = i;\n      };\n\n      i.onerror = function () {\n        _this2.assetsErrorQueue.push({\n          name: name,\n          src: src,\n          retry: retry + 1,\n          type: 'image'\n        });\n      };\n    }\n  }, {\n    key: \"getImg\",\n    value: function getImg(name) {\n      return this.assetsObj.image[name];\n    }\n  }, {\n    key: \"animate\",\n    value: function animate(time) {\n      var _this3 = this;\n\n      var gameTime = time - this.pausedTime;\n      var self = this;\n\n      if (this.paused) {\n        setTimeout(function () {\n          _this3.animate.call(self, gameTime);\n        }, 100);\n        return;\n      }\n\n      this.tick(gameTime);\n      this.clean();\n      this.startAnimate(this, gameTime);\n      this.paintUnderInstance(this);\n      this.updateInstances(gameTime);\n      this.paintInstances();\n      this.paintAboveInstance();\n      this.endAnimate(this, gameTime);\n      this.tickTimeMovement();\n      this.debug && this.showFps();\n      this.debug && this.drawDebug();\n      requestAnimationFrameTool(function (_time) {\n        _this3.animate.call(self, _time);\n      });\n    }\n  }, {\n    key: \"showFps\",\n    value: function showFps() {\n      this.ctx.save();\n      this.ctx.fillStyle = 'red';\n      this.ctx.font = \"\".concat(this.highResolution ? 32 : 16, \"px Arial\");\n      this.ctx.fillText(\"FPS: \".concat(this.fps.toFixed()), 5, this.highResolution ? 40 : 20);\n      this.ctx.restore();\n    }\n  }, {\n    key: \"debugLineX\",\n    value: function debugLineX(y) {\n      this.debugArr.push({\n        type: 'lineX',\n        y: y\n      });\n    }\n  }, {\n    key: \"debugLineY\",\n    value: function debugLineY(x) {\n      this.debugArr.push({\n        type: 'lineY',\n        x: x\n      });\n    }\n  }, {\n    key: \"debugDot\",\n    value: function debugDot(x, y) {\n      this.debugArr.push({\n        type: 'dot',\n        x: x,\n        y: y\n      });\n    }\n  }, {\n    key: \"drawDebug\",\n    value: function drawDebug() {\n      var _this4 = this;\n\n      this.debugArr.forEach(function (i) {\n        var type = i.type,\n            x = i.x,\n            y = i.y;\n\n        switch (type) {\n          case 'dot':\n            _this4.drawDebugDot(x, y);\n\n            break;\n\n          case 'lineX':\n            _this4.drawDebugLine(null, y);\n\n            break;\n\n          case 'lineY':\n            _this4.drawDebugLine(x, null);\n\n            break;\n\n          default:\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"drawDebugLine\",\n    value: function drawDebugLine(x, y) {\n      var _ctx, _ctx2;\n\n      var from = [0, y];\n      var to = [this.width, y];\n\n      if (x) {\n        from = [x, 0];\n        to = [x, this.height];\n      }\n\n      this.ctx.save();\n      this.ctx.strokeStyle = 'red';\n      this.ctx.beginPath();\n\n      (_ctx = this.ctx).moveTo.apply(_ctx, _toConsumableArray(from));\n\n      (_ctx2 = this.ctx).lineTo.apply(_ctx2, _toConsumableArray(to));\n\n      this.ctx.stroke();\n      this.ctx.restore();\n    }\n  }, {\n    key: \"drawDebugDot\",\n    value: function drawDebugDot(x, y) {\n      this.ctx.save();\n      this.ctx.fillStyle = 'red';\n      this.ctx.beginPath();\n      this.ctx.arc(x, y, 2, 0, 2 * Math.PI, true);\n      this.ctx.fill();\n      this.ctx.fillStyle = 'white';\n      this.ctx.beginPath();\n      this.ctx.arc(x, y, 1, 0, 2 * Math.PI, true);\n      this.ctx.fill();\n      this.ctx.restore();\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(time) {\n      this.updateFps(time);\n      this.lastTime = time;\n    }\n  }, {\n    key: \"updateFps\",\n    value: function updateFps(time) {\n      if (this.lastTime === 0) {\n        this.fps = 60;\n      } else {\n        this.fps = 1000 / (time - this.lastTime);\n      }\n    }\n  }, {\n    key: \"pixelsPerFrame\",\n    value: function pixelsPerFrame(velocity) {\n      return velocity / this.fps;\n    }\n  }, {\n    key: \"tickTimeMovement\",\n    value: function tickTimeMovement() {\n      var _this5 = this;\n\n      this.timeMovementStartArr.forEach(function (name) {\n        _this5.timeMovement[name].processing = true;\n      });\n      this.timeMovementStartArr = [];\n      this.timeMovementFinishArr.forEach(function (name) {\n        delete _this5.timeMovement[name];\n      });\n      this.timeMovementFinishArr = [];\n    }\n  }, {\n    key: \"getTimeMovement\",\n    value: function getTimeMovement(name, value, render) {\n      var _this6 = this;\n\n      var option = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var before = option.before,\n          after = option.after;\n      var timingFunc = _tween.default[option.easing || 'linear'];\n      var movementInstanceName = option.name || 'default';\n      var movement = this.timeMovement[name];\n\n      if (!movement) {\n        return;\n      }\n\n      if (!movement.processing) {\n        this.timeMovementStartArr.push(name);\n        movement.store[movementInstanceName] = [];\n        value.forEach(function (v) {\n          movement.store[movementInstanceName].push({\n            start: parseFloat(v[0]),\n            end: parseFloat(v[1])\n          });\n        });\n        before && before();\n      }\n\n      var processRender = function processRender() {\n        var lastRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        var duration = movement.duration;\n        var t = duration;\n\n        if (!lastRender) {\n          var currentTime = _this6.utils.getCurrentTime();\n\n          var startTime = movement.startTime;\n          t = currentTime - startTime;\n        }\n\n        var values = movement.store[movementInstanceName].map(function (v) {\n          return timingFunc(t, v.start, v.end - v.start, duration);\n        });\n        render.apply(_this6, values);\n      };\n\n      if (this.checkTimeMovement(name)) {\n        processRender();\n      } else {\n        this.timeMovementFinishArr.push(name);\n        processRender(true);\n        after && after();\n      }\n    }\n  }, {\n    key: \"checkTimeMovement\",\n    value: function checkTimeMovement(name) {\n      var movement = this.timeMovement[name] || {};\n      return this.utils.getCurrentTime() <= movement.endTime;\n    }\n  }, {\n    key: \"setTimeMovement\",\n    value: function setTimeMovement(name, duration) {\n      var currentTime = this.utils.getCurrentTime();\n      this.timeMovement[name] = {\n        startTime: currentTime,\n        endTime: currentTime + duration,\n        duration: duration,\n        store: {}\n      };\n    }\n  }, {\n    key: \"clean\",\n    value: function clean() {\n      this.ctx.clearRect(0, 0, this.width, this.height);\n      this.debugArr = [];\n    }\n  }, {\n    key: \"addLayer\",\n    value: function addLayer(layer) {\n      this.layerArr.push(layer);\n      this.instancesObj[layer] = [];\n    }\n  }, {\n    key: \"removeLayer\",\n    value: function removeLayer(layer) {\n      this.layerArr = this.layerArr.filter(function (i) {\n        return i !== layer;\n      });\n      delete this.instancesObj[layer];\n    }\n  }, {\n    key: \"swapLayer\",\n    value: function swapLayer(index1, index2) {\n      this.utils.arraySwap(this.layerArr, index1, index2);\n    }\n  }, {\n    key: \"addInstance\",\n    value: function addInstance(instance) {\n      var layer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.defaultLayer;\n      this.instancesObj[layer].push(instance);\n    }\n  }, {\n    key: \"getInstance\",\n    value: function getInstance(name) {\n      var layer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.defaultLayer;\n      return this.instancesObj[layer].filter(function (i) {\n        return i.name === name;\n      })[0];\n    }\n  }, {\n    key: \"removeInstance\",\n    value: function removeInstance(name) {\n      var layer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.defaultLayer;\n\n      if (this.getInstance(name, layer)) {\n        this.instancesObj[layer] = this.instancesObj[layer].filter(function (i) {\n          return i.name !== name;\n        });\n      }\n    }\n  }, {\n    key: \"updateInstances\",\n    value: function updateInstances(time) {\n      var _this7 = this;\n\n      this.layerArr.forEach(function (l) {\n        _this7.instancesObj[l].forEach(function (i) {\n          i.update && i.update(_this7, time);\n        });\n      });\n    }\n  }, {\n    key: \"paintInstances\",\n    value: function paintInstances() {\n      var _this8 = this;\n\n      this.layerArr.forEach(function (l) {\n        _this8.instancesObj[l].forEach(function (i) {\n          i.paint && i.paint(_this8);\n        });\n      });\n    }\n  }, {\n    key: \"togglePaused\",\n    value: function togglePaused() {\n      var now = this.utils.getCurrentTime();\n      this.paused = !this.paused;\n\n      if (this.paused) {\n        this.lastPausedAt = now;\n      } else {\n        this.pausedTime += now - this.lastPausedAt;\n      }\n    }\n  }, {\n    key: \"addKeyUpListener\",\n    value: function addKeyUpListener(key, listener) {\n      this.keyUpListeners[key] = listener;\n    }\n  }, {\n    key: \"addKeyDownListener\",\n    value: function addKeyDownListener(key, listener) {\n      this.keyDownListeners[key] = listener;\n    }\n  }, {\n    key: \"addKeyPressListener\",\n    value: function addKeyPressListener(key, listener) {\n      this.keyPressListeners[key] = listener;\n    }\n  }, {\n    key: \"findKeyListener\",\n    value: function findKeyListener(key, type) {\n      if (type === 'keyup') {\n        return this.keyUpListeners[key];\n      } else if (type === 'keydown') {\n        return this.keyDownListeners[key];\n      }\n\n      return this.keyPressListeners[key];\n    }\n  }, {\n    key: \"keyListener\",\n    value: function keyListener(e, type) {\n      var key;\n\n      switch (e.keyCode) {\n        case 13:\n          key = 'enter';\n          break;\n\n        case 32:\n          key = 'space';\n          break;\n\n        case 37:\n          key = 'leftArrow';\n          break;\n\n        case 39:\n          key = 'rightArrow';\n          break;\n\n        case 38:\n          key = 'upArrow';\n          break;\n\n        case 40:\n          key = 'downArrow';\n          break;\n\n        default:\n          key = e.keyCode;\n          break;\n      }\n\n      var listener = this.findKeyListener(key, type);\n      if (listener) listener();\n    }\n  }, {\n    key: \"load\",\n    value: function load(onload, loading) {\n      var _this9 = this;\n\n      var id = setInterval(function () {\n        var assetsTotalCount = _this9.assetsCount.image + _this9.assetsCount.audio;\n        var assetsLoadedCount = Object.keys(_this9.assetsObj.image).length + Object.keys(_this9.assetsObj.audio).length;\n\n        if (loading && isFunction(loading)) {\n          loading({\n            success: assetsLoadedCount,\n            failed: _this9.assetsErrorCount,\n            total: assetsTotalCount\n          });\n        }\n\n        if (_this9.assetsErrorQueue.length > 0) {\n          _this9.assetsErrorQueue.forEach(function (i) {\n            var retry = i.retry,\n                name = i.name,\n                src = i.src,\n                type = i.type;\n\n            if (retry >= _this9.loadLimit) {\n              _this9.assetsErrorCount += 1;\n            } else if (type === 'image') {\n              _this9.addImg(name, src, retry);\n            } else {\n              _this9.addAudio(name, src, retry);\n            }\n          });\n\n          _this9.assetsErrorQueue = [];\n        }\n\n        if (assetsLoadedCount === assetsTotalCount) {\n          if (onload && isFunction(onload)) {\n            onload();\n          } else {\n            _this9.init();\n          }\n\n          clearInterval(id);\n        }\n      }, 200);\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _this10 = this;\n\n      var self = this;\n      requestAnimationFrameTool(function (time) {\n        _this10.animate.call(self, time);\n      });\n    }\n  }]);\n\n  return Engine;\n}();\n\nexports.default = Engine;\n\n//# sourceURL=webpack:///./node_modules/cooljs/engine.js?");

/***/ }),

/***/ "./node_modules/cooljs/index.js":
/*!**************************************!*\
  !*** ./node_modules/cooljs/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Engine\", {\n  enumerable: true,\n  get: function get() {\n    return _engine.default;\n  }\n});\nObject.defineProperty(exports, \"Instance\", {\n  enumerable: true,\n  get: function get() {\n    return _instance.default;\n  }\n});\n\nvar _engine = _interopRequireDefault(__webpack_require__(/*! ./engine */ \"./node_modules/cooljs/engine.js\"));\n\nvar _instance = _interopRequireDefault(__webpack_require__(/*! ./instance */ \"./node_modules/cooljs/instance.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//# sourceURL=webpack:///./node_modules/cooljs/index.js?");

/***/ }),

/***/ "./node_modules/cooljs/instance.js":
/*!*****************************************!*\
  !*** ./node_modules/cooljs/instance.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Instance =\n/*#__PURE__*/\nfunction () {\n  function Instance() {\n    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Instance);\n\n    var name = option.name,\n        painter = option.painter,\n        action = option.action;\n    this.name = name;\n    this.x = 0;\n    this.y = 0;\n    this.width = 0;\n    this.height = 0;\n    this.ax = 0;\n    this.ay = 0;\n    this.vx = 0;\n    this.vy = 0;\n    this.visible = true;\n    this.painter = painter || null;\n    this.action = action || null;\n    this.ready = false;\n  }\n\n  _createClass(Instance, [{\n    key: \"paint\",\n    value: function paint(engine) {\n      if (this.painter !== null && this.visible) {\n        this.painter(this, engine);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(engine, time) {\n      if (this.action !== null) {\n        this.action(this, engine, time);\n      }\n    }\n  }, {\n    key: \"updateWidth\",\n    value: function updateWidth(width) {\n      this.width = width;\n      this.calWidth = width / 2;\n    }\n  }, {\n    key: \"updateHeight\",\n    value: function updateHeight(height) {\n      this.height = height;\n      this.calHeight = height / 2;\n    }\n  }]);\n\n  return Instance;\n}();\n\nexports.default = Instance;\n\n//# sourceURL=webpack:///./node_modules/cooljs/instance.js?");

/***/ }),

/***/ "./node_modules/cooljs/tween.js":
/*!**************************************!*\
  !*** ./node_modules/cooljs/tween.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/* eslint-disable */\nvar Tween = {\n  linear: function linear(t, b, c, d) {\n    return c * t / d + b;\n  },\n  easeIn: function easeIn(t, b, c, d) {\n    return c * (t /= d) * t + b;\n  },\n  easeOut: function easeOut(t, b, c, d) {\n    return -c * (t /= d) * (t - 2) + b;\n  },\n  easeInOut: function easeInOut(t, b, c, d) {\n    if ((t /= d / 2) < 1) return c / 2 * t * t + b;\n    return -c / 2 * (--t * (t - 2) - 1) + b;\n  }\n};\nvar _default = Tween;\nexports.default = _default;\n\n//# sourceURL=webpack:///./node_modules/cooljs/tween.js?");

/***/ }),

/***/ "./node_modules/cooljs/utils.js":
/*!**************************************!*\
  !*** ./node_modules/cooljs/utils.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arraySwap = exports.requestAnimationFrameTool = exports.isTouchDevice = exports.isFunction = exports.randomPositiveNegative = exports.random = exports.getCurrentTime = void 0;\n\nvar getCurrentTime = function getCurrentTime() {\n  return +new Date();\n};\n\nexports.getCurrentTime = getCurrentTime;\n\nvar random = function random(min, max) {\n  return Math.random() * (max - min) + min;\n};\n\nexports.random = random;\n\nvar randomPositiveNegative = function randomPositiveNegative() {\n  return Math.random() < 0.5 ? -1 : 1;\n};\n\nexports.randomPositiveNegative = randomPositiveNegative;\n\nvar isFunction = function isFunction(f) {\n  return typeof f === 'function';\n};\n\nexports.isFunction = isFunction;\n\nvar isTouchDevice = function isTouchDevice() {\n  return 'ontouchstart' in window || window.navigator.msMaxTouchPoints;\n};\n\nexports.isTouchDevice = isTouchDevice;\n\nvar requestAnimationFrameTool = function () {\n  var FPS = 60;\n  var timeout = 1000 / FPS;\n  return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callBack) {\n    window.setTimeout(function () {\n      var start = getCurrentTime();\n      callBack(start);\n      var end = getCurrentTime();\n      timeout = 1000 / FPS - (end - start);\n    }, timeout);\n  };\n}();\n\nexports.requestAnimationFrameTool = requestAnimationFrameTool;\n\nvar arraySwap = function arraySwap(array, index1, index2) {\n  var temp = array[index2];\n  array[index2] = array[index1];\n  array[index1] = temp;\n};\n\nexports.arraySwap = arraySwap;\n\n//# sourceURL=webpack:///./node_modules/cooljs/utils.js?");

/***/ }),

/***/ "./src/animateFuncs.js":
/*!*****************************!*\
  !*** ./src/animateFuncs.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.startAnimate = exports.endAnimate = void 0;\n\nvar _cooljs = __webpack_require__(/*! cooljs */ \"./node_modules/cooljs/index.js\");\n\nvar _block = __webpack_require__(/*! ./block */ \"./src/block.js\");\n\nvar _utils = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n\nvar _flight = __webpack_require__(/*! ./flight */ \"./src/flight.js\");\n\nvar constant = _interopRequireWildcard(__webpack_require__(/*! ./constant */ \"./src/constant.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nvar endAnimate = function endAnimate(engine) {\n  var gameStartNow = engine.getVariable(constant.gameStartNow);\n  if (!gameStartNow) return; //const successCount = engine.getVariable(constant.successCount, 0)\n\n  var failedCount = engine.getVariable(constant.failedCount);\n  var gameScore = engine.getVariable(constant.gameScore, 0);\n  var threeFiguresOffset = Number(successCount) > 99 ? engine.width * 0.1 : 0;\n  var score = engine.getImg('score');\n  var scoreWidth = score.width;\n  var scoreHeight = score.height;\n  var zoomedWidth = engine.width * 0.35;\n  var zoomedHeight = scoreHeight * zoomedWidth / scoreWidth;\n  engine.ctx.drawImage(score, engine.width * 0.61, engine.width * 0.038, zoomedWidth, zoomedHeight);\n  (0, _utils.drawYellowString)(engine, {\n    string: gameScore,\n    size: engine.width * 0.06,\n    x: engine.width * 0.9,\n    y: engine.width * 0.11,\n    textAlign: 'right'\n  });\n  var ctx = engine.ctx;\n  var heart = engine.getImg('heart');\n  var heartWidth = heart.width;\n  var heartHeight = heart.height;\n  var zoomedHeartWidth = engine.width * 0.08;\n  var zoomedHeartHeight = heartHeight * zoomedHeartWidth / heartWidth;\n\n  for (var i = 1; i <= 3 - failedCount; i += 1) {\n    ctx.drawImage(heart, engine.width * 0.95 - i * zoomedHeartWidth, // (engine.width * 0.66) + ((i - 1) * zoomedHeartWidth),\n    engine.width * 0.16, zoomedHeartWidth, zoomedHeartHeight);\n    ctx.restore();\n  }\n};\n\nexports.endAnimate = endAnimate;\n\nvar startAnimate = function startAnimate(engine) {\n  var gameStartNow = engine.getVariable(constant.gameStartNow);\n  if (!gameStartNow) return;\n  var lastBlock = engine.getInstance(\"block_\".concat(engine.getVariable(constant.blockCount)));\n\n  if (!lastBlock || [constant.land, constant.out].indexOf(lastBlock.status) > -1) {\n    if ((0, _utils.checkMoveDown)(engine) && (0, _utils.getMoveDownValue)(engine)) return;\n    if (engine.checkTimeMovement(constant.hookUpMovement)) return;\n    var angleBase = (0, _utils.getAngleBase)(engine);\n    var initialAngle = Math.PI * engine.utils.random(angleBase, angleBase + 5) * engine.utils.randomPositiveNegative() / 180;\n    engine.setVariable(constant.blockCount, engine.getVariable(constant.blockCount) + 1);\n    engine.setVariable(constant.initialAngle, initialAngle);\n    engine.setTimeMovement(constant.hookDownMovement, 500);\n    var block = new _cooljs.Instance({\n      name: \"block_\".concat(engine.getVariable(constant.blockCount)),\n      action: _block.blockAction,\n      painter: _block.blockPainter\n    });\n    engine.addInstance(block);\n  }\n\n  var successCount = Number(engine.getVariable(constant.successCount, 0));\n\n  switch (successCount) {\n    case 2:\n      (0, _flight.addFlight)(engine, 1, 'leftToRight');\n      break;\n\n    case 6:\n      (0, _flight.addFlight)(engine, 2, 'rightToLeft');\n      break;\n\n    case 8:\n      (0, _flight.addFlight)(engine, 3, 'leftToRight');\n      break;\n\n    case 14:\n      (0, _flight.addFlight)(engine, 4, 'bottomToTop');\n      break;\n\n    case 18:\n      (0, _flight.addFlight)(engine, 5, 'bottomToTop');\n      break;\n\n    case 22:\n      (0, _flight.addFlight)(engine, 6, 'bottomToTop');\n      break;\n\n    case 25:\n      (0, _flight.addFlight)(engine, 7, 'rightTopToLeft');\n      break;\n\n    default:\n      break;\n  }\n};\n\nexports.startAnimate = startAnimate;\n\n//# sourceURL=webpack:///./src/animateFuncs.js?");

/***/ }),

/***/ "./src/background.js":
/*!***************************!*\
  !*** ./src/background.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.background = exports.backgroundLinearGradient = exports.backgroundImg = void 0;\n\nvar _utils = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n\nvar constant = _interopRequireWildcard(__webpack_require__(/*! ./constant */ \"./src/constant.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nvar backgroundImg = function backgroundImg(engine) {\n  var bg = engine.getImg('background');\n  var bgWidth = bg.width;\n  var bgHeight = bg.height;\n  var zoomedHeight = bgHeight * engine.width / bgWidth;\n  var offsetHeight = engine.getVariable(constant.bgImgOffset, engine.height - zoomedHeight);\n\n  if (offsetHeight > engine.height) {\n    return;\n  }\n\n  engine.getTimeMovement(constant.moveDownMovement, [[offsetHeight, offsetHeight + (0, _utils.getMoveDownValue)(engine, {\n    pixelsPerFrame: function pixelsPerFrame(s) {\n      return s / 2;\n    }\n  })]], function (value) {\n    offsetHeight = value;\n  }, {\n    name: 'background'\n  });\n  engine.getTimeMovement(constant.bgInitMovement, [[offsetHeight, offsetHeight + zoomedHeight / 4]], function (value) {\n    offsetHeight = value;\n  });\n  engine.setVariable(constant.bgImgOffset, offsetHeight);\n  engine.setVariable(constant.lineInitialOffset, engine.height - zoomedHeight * 0.394);\n  engine.ctx.drawImage(bg, 0, offsetHeight, engine.width, zoomedHeight);\n};\n\nexports.backgroundImg = backgroundImg;\n\nvar getLinearGradientColorRgb = function getLinearGradientColorRgb(colorArr, colorIndex, proportion) {\n  var currentIndex = colorIndex + 1 >= colorArr.length ? colorArr.length - 1 : colorIndex;\n  var colorCurrent = colorArr[currentIndex];\n  var nextIndex = currentIndex + 1 >= colorArr.length - 1 ? currentIndex : currentIndex + 1;\n  var colorNext = colorArr[nextIndex];\n\n  var calRgbValue = function calRgbValue(index) {\n    var current = colorCurrent[index];\n    var next = colorNext[index];\n    return Math.round(current + (next - current) * proportion);\n  };\n\n  return \"rgb(\".concat(calRgbValue(0), \", \").concat(calRgbValue(1), \", \").concat(calRgbValue(2), \")\");\n};\n\nvar backgroundLinearGradient = function backgroundLinearGradient(engine) {\n  var grad = engine.ctx.createLinearGradient(0, 0, 0, engine.height);\n  var colorArr = [[200, 255, 150], [105, 230, 240], [90, 190, 240], [85, 100, 190], [55, 20, 35], [75, 25, 35], [25, 0, 10]];\n  var offsetHeight = engine.getVariable(constant.bgLinearGradientOffset, 0);\n\n  if ((0, _utils.checkMoveDown)(engine)) {\n    engine.setVariable(constant.bgLinearGradientOffset, offsetHeight + (0, _utils.getMoveDownValue)(engine) * 1.5);\n  }\n\n  var colorIndex = parseInt(offsetHeight / engine.height, 10);\n  var calOffsetHeight = offsetHeight % engine.height;\n  var proportion = calOffsetHeight / engine.height;\n  var colorBase = getLinearGradientColorRgb(colorArr, colorIndex, proportion);\n  var colorTop = getLinearGradientColorRgb(colorArr, colorIndex + 1, proportion);\n  grad.addColorStop(0, colorTop);\n  grad.addColorStop(1, colorBase);\n  engine.ctx.fillStyle = grad;\n  engine.ctx.beginPath();\n  engine.ctx.rect(0, 0, engine.width, engine.height);\n  engine.ctx.fill(); // lightning\n\n  var lightning = function lightning() {\n    engine.ctx.fillStyle = 'rgba(255, 255, 255, 0.7)';\n    engine.ctx.fillRect(0, 0, engine.width, engine.height);\n  };\n\n  engine.getTimeMovement(constant.lightningMovement, [], function () {}, {\n    before: lightning,\n    after: lightning\n  });\n};\n\nexports.backgroundLinearGradient = backgroundLinearGradient;\n\nvar background = function background(engine) {\n  backgroundLinearGradient(engine);\n  backgroundImg(engine);\n};\n\nexports.background = background;\n\n//# sourceURL=webpack:///./src/background.js?");

/***/ }),

/***/ "./src/block.js":
/*!**********************!*\
  !*** ./src/block.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.blockPainter = exports.blockAction = void 0;\n\nvar _utils = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n\nvar constant = _interopRequireWildcard(__webpack_require__(/*! ./constant */ \"./src/constant.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nvar checkCollision = function checkCollision(block, line) {\n  // 0 goon 1 drop 2 rotate left 3 rotate right 4 ok 5 perfect\n  if (block.y + block.height >= line.y) {\n    if (block.x < line.x - block.calWidth || block.x > line.collisionX + block.calWidth) {\n      return 1;\n    }\n\n    if (block.x < line.x) {\n      return 2;\n    }\n\n    if (block.x > line.collisionX) {\n      return 3;\n    }\n\n    if (block.x > line.x + block.calWidth * 0.8 && block.x < line.x + block.calWidth * 1.2) {\n      // -10% +10%\n      return 5;\n    }\n\n    return 4;\n  }\n\n  return 0;\n};\n\nvar swing = function swing(instance, engine, time) {\n  var ropeHeight = engine.getVariable(constant.ropeHeight);\n  if (instance.status !== constant.swing) return;\n  var i = instance;\n  var initialAngle = engine.getVariable(constant.initialAngle);\n  i.angle = initialAngle * (0, _utils.getSwingBlockVelocity)(engine, time);\n  i.weightX = i.x + Math.sin(i.angle) * ropeHeight;\n  i.weightY = i.y + Math.cos(i.angle) * ropeHeight;\n};\n\nvar checkBlockOut = function checkBlockOut(instance, engine) {\n  if (instance.status === constant.rotateLeft) {\n    // 左转 要等右上角消失才算消失\n    if (instance.y - instance.width >= engine.height) {\n      instance.visible = false;\n      instance.status = constant.out;\n      (0, _utils.addFailedCount)(engine);\n    }\n  } else if (instance.y >= engine.height) {\n    instance.visible = false;\n    instance.status = constant.out;\n    (0, _utils.addFailedCount)(engine);\n  }\n};\n\nvar blockAction = function blockAction(instance, engine, time) {\n  var i = instance;\n  var ropeHeight = engine.getVariable(constant.ropeHeight);\n\n  if (!i.visible) {\n    return;\n  }\n\n  if (!i.ready) {\n    i.ready = true;\n    i.status = constant.swing;\n    instance.updateWidth(engine.getVariable(constant.blockWidth));\n    instance.updateHeight(engine.getVariable(constant.blockHeight));\n    instance.x = engine.width / 2;\n    instance.y = ropeHeight * -1.5;\n  }\n\n  var line = engine.getInstance('line');\n\n  switch (i.status) {\n    case constant.swing:\n      engine.getTimeMovement(constant.hookDownMovement, [[instance.y, instance.y + ropeHeight]], function (value) {\n        instance.y = value;\n      }, {\n        name: 'block'\n      });\n      swing(instance, engine, time);\n      break;\n\n    case constant.beforeDrop:\n      i.x = instance.weightX - instance.calWidth;\n      i.y = instance.weightY + 0.3 * instance.height; // add rope height\n\n      i.rotate = 0;\n      i.ay = engine.pixelsPerFrame(0.0003 * engine.height); // acceleration of gravity\n\n      i.startDropTime = time;\n      i.status = constant.drop;\n      break;\n\n    case constant.drop:\n      var deltaTime = time - i.startDropTime;\n      i.startDropTime = time;\n      i.vy += i.ay * deltaTime;\n      i.y += i.vy * deltaTime + 0.5 * i.ay * Math.pow(deltaTime, 2);\n      var collision = checkCollision(instance, line);\n      var blockY = line.y - instance.height;\n\n      var calRotate = function calRotate(ins) {\n        ins.originOutwardAngle = Math.atan(ins.height / ins.outwardOffset);\n        ins.originHypotenuse = Math.sqrt(Math.pow(ins.height, 2) + Math.pow(ins.outwardOffset, 2));\n        engine.playAudio('rotate');\n      };\n\n      switch (collision) {\n        case 1:\n          checkBlockOut(instance, engine);\n          break;\n\n        case 2:\n          i.status = constant.rotateLeft;\n          instance.y = blockY;\n          instance.outwardOffset = line.x + instance.calWidth - instance.x;\n          calRotate(instance);\n          break;\n\n        case 3:\n          i.status = constant.rotateRight;\n          instance.y = blockY;\n          instance.outwardOffset = line.collisionX + instance.calWidth - instance.x;\n          calRotate(instance);\n          break;\n\n        case 4:\n        case 5:\n          i.status = constant.land;\n          var lastSuccessCount = engine.getVariable(constant.successCount);\n          (0, _utils.addSuccessCount)(engine);\n          engine.setTimeMovement(constant.moveDownMovement, 500);\n\n          if (lastSuccessCount === 10 || lastSuccessCount === 15) {\n            engine.setTimeMovement(constant.lightningMovement, 150);\n          }\n\n          instance.y = blockY;\n          line.y = blockY;\n          line.x = i.x - i.calWidth;\n          line.collisionX = line.x + i.width; // 作弊检测 超出左边或右边1／3\n\n          var cheatWidth = i.width * 0.3;\n\n          if (i.x > engine.width - cheatWidth * 2 || i.x < -cheatWidth) {\n            engine.setVariable(constant.hardMode, true);\n          }\n\n          if (collision === 5) {\n            instance.perfect = true;\n            (0, _utils.addScore)(engine, true);\n            engine.playAudio('drop-perfect');\n          } else {\n            (0, _utils.addScore)(engine);\n            engine.playAudio('drop');\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      break;\n\n    case constant.land:\n      engine.getTimeMovement(constant.moveDownMovement, [[instance.y, instance.y + (0, _utils.getMoveDownValue)(engine, {\n        pixelsPerFrame: function pixelsPerFrame(s) {\n          return s / 2;\n        }\n      })]], function (value) {\n        if (!instance.visible) return;\n        instance.y = value;\n\n        if (instance.y > engine.height) {\n          instance.visible = false;\n        }\n      }, {\n        name: instance.name\n      });\n      instance.x += (0, _utils.getLandBlockVelocity)(engine, time);\n      break;\n\n    case constant.rotateLeft:\n    case constant.rotateRight:\n      var isRight = i.status === constant.rotateRight;\n      var rotateSpeed = engine.pixelsPerFrame(Math.PI * 4);\n      var isShouldFall = isRight ? instance.rotate > 1.3 : instance.rotate < -1.3; // 75度\n\n      var leftFix = isRight ? 1 : -1;\n\n      if (isShouldFall) {\n        instance.rotate += rotateSpeed / 8 * leftFix;\n        instance.y += engine.pixelsPerFrame(engine.height * 0.7);\n        instance.x += engine.pixelsPerFrame(engine.width * 0.3) * leftFix;\n      } else {\n        var rotateRatio = (instance.calWidth - instance.outwardOffset) / instance.calWidth;\n        rotateRatio = rotateRatio > 0.5 ? rotateRatio : 0.5;\n        instance.rotate += rotateSpeed * rotateRatio * leftFix;\n        var angle = instance.originOutwardAngle + instance.rotate;\n        var rotateAxisX = isRight ? line.collisionX + instance.calWidth : line.x + instance.calWidth;\n        var rotateAxisY = line.y;\n        instance.x = rotateAxisX - Math.cos(angle) * instance.originHypotenuse;\n        instance.y = rotateAxisY - Math.sin(angle) * instance.originHypotenuse;\n      }\n\n      checkBlockOut(instance, engine);\n      break;\n\n    default:\n      break;\n  }\n};\n\nexports.blockAction = blockAction;\n\nvar drawSwingBlock = function drawSwingBlock(instance, engine) {\n  var bl = engine.getImg('blockRope');\n  engine.ctx.drawImage(bl, instance.weightX - instance.calWidth, instance.weightY, instance.width, instance.height * 1.3);\n  var leftX = instance.weightX - instance.calWidth;\n  engine.debugLineY(leftX);\n};\n\nvar drawBlock = function drawBlock(instance, engine) {\n  var perfect = instance.perfect;\n  var bl = engine.getImg(perfect ? 'block-perfect' : 'block');\n  engine.ctx.drawImage(bl, instance.x, instance.y, instance.width, instance.height);\n};\n\nvar drawRotatedBlock = function drawRotatedBlock(instance, engine) {\n  var ctx = engine.ctx;\n  ctx.save();\n  ctx.translate(instance.x, instance.y);\n  ctx.rotate(instance.rotate);\n  ctx.translate(-instance.x, -instance.y);\n  drawBlock(instance, engine);\n  ctx.restore();\n};\n\nvar blockPainter = function blockPainter(instance, engine) {\n  var status = instance.status;\n\n  switch (status) {\n    case constant.swing:\n      drawSwingBlock(instance, engine);\n      break;\n\n    case constant.drop:\n    case constant.land:\n      drawBlock(instance, engine);\n      break;\n\n    case constant.rotateLeft:\n    case constant.rotateRight:\n      drawRotatedBlock(instance, engine);\n      break;\n\n    default:\n      break;\n  }\n};\n\nexports.blockPainter = blockPainter;\n\n//# sourceURL=webpack:///./src/block.js?");

/***/ }),

/***/ "./src/cloud.js":
/*!**********************!*\
  !*** ./src/cloud.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cloudPainter = exports.cloudAction = void 0;\n\nvar _utils = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n\nvar constant = _interopRequireWildcard(__webpack_require__(/*! ./constant */ \"./src/constant.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nvar randomCloudImg = function randomCloudImg(instance) {\n  var count = instance.count;\n  var clouds = ['c1', 'c2', 'c3'];\n  var stones = ['c4', 'c5', 'c6', 'c7', 'c8'];\n\n  var randomImg = function randomImg(array) {\n    return array[Math.floor(Math.random() * array.length)];\n  };\n\n  instance.imgName = count > 6 ? randomImg(stones) : randomImg(clouds);\n};\n\nvar cloudAction = function cloudAction(instance, engine) {\n  if (!instance.ready) {\n    instance.ready = true;\n    randomCloudImg(instance);\n    instance.width = engine.getVariable(constant.cloudSize);\n    instance.height = engine.getVariable(constant.cloudSize);\n    var engineW = engine.width;\n    var engineH = engine.height;\n    var positionArr = [{\n      x: engineW * 0.1,\n      y: -engineH * 0.66\n    }, {\n      x: engineW * 0.65,\n      y: -engineH * 0.33\n    }, {\n      x: engineW * 0.1,\n      y: 0\n    }, {\n      x: engineW * 0.65,\n      y: engineH * 0.33\n    }];\n    var position = positionArr[instance.index - 1];\n    instance.x = engine.utils.random(position.x, position.x * 1.2);\n    instance.originX = instance.x;\n    instance.ax = engine.pixelsPerFrame(instance.width * engine.utils.random(0.05, 0.08) * engine.utils.randomPositiveNegative());\n    instance.y = engine.utils.random(position.y, position.y * 1.2);\n  }\n\n  instance.x += instance.ax;\n\n  if (instance.x >= instance.originX + instance.width || instance.x <= instance.originX - instance.width) {\n    instance.ax *= -1;\n  }\n\n  if ((0, _utils.checkMoveDown)(engine)) {\n    instance.y += (0, _utils.getMoveDownValue)(engine) * 1.2;\n  }\n\n  if (instance.y >= engine.height) {\n    instance.y = -engine.height * 0.66;\n    instance.count += 4;\n    randomCloudImg(instance);\n  }\n};\n\nexports.cloudAction = cloudAction;\n\nvar cloudPainter = function cloudPainter(instance, engine) {\n  var ctx = engine.ctx;\n  var cloud = engine.getImg(instance.imgName);\n  ctx.drawImage(cloud, instance.x, instance.y, instance.width, instance.height);\n};\n\nexports.cloudPainter = cloudPainter;\n\n//# sourceURL=webpack:///./src/cloud.js?");

/***/ }),

/***/ "./src/constant.js":
/*!*************************!*\
  !*** ./src/constant.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.moveDownMovement = exports.tutorialMovement = exports.lightningMovement = exports.hookUpMovement = exports.hookDownMovement = exports.bgInitMovement = exports.initialAngle = exports.out = exports.land = exports.drop = exports.beforeDrop = exports.swing = exports.rotateLeft = exports.rotateRight = exports.flightLayer = exports.flightCount = exports.ropeHeight = exports.cloudSize = exports.blockHeight = exports.blockWidth = exports.blockCount = exports.bgLinearGradientOffset = exports.lineInitialOffset = exports.bgImgOffset = exports.hookNormal = exports.hookUp = exports.hookDown = exports.gameScore = exports.perfectCount = exports.failedCount = exports.successCount = exports.hardMode = exports.gameUserOption = exports.gameStartNow = void 0;\nvar gameStartNow = 'GAME_START_NOW';\nexports.gameStartNow = gameStartNow;\nvar gameUserOption = 'GAME_USER_OPTION';\nexports.gameUserOption = gameUserOption;\nvar hardMode = 'HARD_MODE';\nexports.hardMode = hardMode;\nvar successCount = 'SUCCESS_COUNT';\nexports.successCount = successCount;\nvar failedCount = 'FAILED_COUNT';\nexports.failedCount = failedCount;\nvar perfectCount = 'PERFECT_COUNT';\nexports.perfectCount = perfectCount;\nvar gameScore = 'GAME_SCORE';\nexports.gameScore = gameScore;\nvar hookDown = 'HOOK_DOWN';\nexports.hookDown = hookDown;\nvar hookUp = 'HOOK_UP';\nexports.hookUp = hookUp;\nvar hookNormal = 'HOOK_NORMAL';\nexports.hookNormal = hookNormal;\nvar bgImgOffset = 'BACKGROUND_IMG_OFFSET_HEIGHT';\nexports.bgImgOffset = bgImgOffset;\nvar lineInitialOffset = 'LINE_INITIAL_OFFSET';\nexports.lineInitialOffset = lineInitialOffset;\nvar bgLinearGradientOffset = 'BACKGROUND_LINEAR_GRADIENT_OFFSET_HEIGHT';\nexports.bgLinearGradientOffset = bgLinearGradientOffset;\nvar blockCount = 'BLOCK_COUNT';\nexports.blockCount = blockCount;\nvar blockWidth = 'BLOCK_WIDTH';\nexports.blockWidth = blockWidth;\nvar blockHeight = 'BLOCK_HEIGHT';\nexports.blockHeight = blockHeight;\nvar cloudSize = 'CLOUD_SIZE';\nexports.cloudSize = cloudSize;\nvar ropeHeight = 'ROPE_HEIGHT';\nexports.ropeHeight = ropeHeight;\nvar flightCount = 'FLIGHT_COUNT';\nexports.flightCount = flightCount;\nvar flightLayer = 'FLIGHT_LAYER';\nexports.flightLayer = flightLayer;\nvar rotateRight = 'ROTATE_RIGHT';\nexports.rotateRight = rotateRight;\nvar rotateLeft = 'ROTATE_LEFT';\nexports.rotateLeft = rotateLeft;\nvar swing = 'SWING';\nexports.swing = swing;\nvar beforeDrop = 'BEFORE_DROP';\nexports.beforeDrop = beforeDrop;\nvar drop = 'DROP';\nexports.drop = drop;\nvar land = 'LAND';\nexports.land = land;\nvar out = 'OUT';\nexports.out = out;\nvar initialAngle = 'INITIAL_ANGLE';\nexports.initialAngle = initialAngle;\nvar bgInitMovement = 'BG_INIT_MOVEMENT';\nexports.bgInitMovement = bgInitMovement;\nvar hookDownMovement = 'HOOK_DOWN_MOVEMENT';\nexports.hookDownMovement = hookDownMovement;\nvar hookUpMovement = 'HOOK_UP_MOVEMENT';\nexports.hookUpMovement = hookUpMovement;\nvar lightningMovement = 'LIGHTNING_MOVEMENT';\nexports.lightningMovement = lightningMovement;\nvar tutorialMovement = 'TUTORIAL_MOVEMENT';\nexports.tutorialMovement = tutorialMovement;\nvar moveDownMovement = 'MOVE_DOWN_MOVEMENT';\nexports.moveDownMovement = moveDownMovement;\n\n//# sourceURL=webpack:///./src/constant.js?");

/***/ }),

/***/ "./src/flight.js":
/*!***********************!*\
  !*** ./src/flight.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addFlight = exports.flightPainter = exports.flightAction = void 0;\n\nvar _cooljs = __webpack_require__(/*! cooljs */ \"./node_modules/cooljs/index.js\");\n\nvar constant = _interopRequireWildcard(__webpack_require__(/*! ./constant */ \"./src/constant.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nvar getActionConfig = function getActionConfig(engine, type) {\n  var width = engine.width,\n      height = engine.height,\n      utils = engine.utils;\n  var random = utils.random;\n  var size = engine.getVariable(constant.cloudSize);\n  var actionTypes = {\n    bottomToTop: {\n      x: width * random(0.3, 0.7),\n      y: height,\n      vx: 0,\n      vy: engine.pixelsPerFrame(height) * 0.7 * -1\n    },\n    leftToRight: {\n      x: size * -1,\n      y: height * random(0.3, 0.6),\n      vx: engine.pixelsPerFrame(width) * 0.4,\n      vy: engine.pixelsPerFrame(height) * 0.1 * -1\n    },\n    rightToLeft: {\n      x: width,\n      y: height * random(0.2, 0.5),\n      vx: engine.pixelsPerFrame(width) * 0.4 * -1,\n      vy: engine.pixelsPerFrame(height) * 0.1\n    },\n    rightTopToLeft: {\n      x: width,\n      y: 0,\n      vx: engine.pixelsPerFrame(width) * 0.6 * -1,\n      vy: engine.pixelsPerFrame(height) * 0.5\n    }\n  };\n  return actionTypes[type];\n};\n\nvar flightAction = function flightAction(instance, engine) {\n  var visible = instance.visible,\n      ready = instance.ready,\n      type = instance.type;\n  if (!visible) return;\n  var size = engine.getVariable(constant.cloudSize);\n\n  if (!ready) {\n    var action = getActionConfig(engine, type);\n    instance.ready = true;\n    instance.width = size;\n    instance.height = size;\n    instance.x = action.x;\n    instance.y = action.y;\n    instance.vx = action.vx;\n    instance.vy = action.vy;\n  }\n\n  instance.x += instance.vx;\n  instance.y += instance.vy;\n\n  if (instance.y + size < 0 || instance.y > engine.height || instance.x + size < 0 || instance.x > engine.width) {\n    instance.visible = false;\n  }\n};\n\nexports.flightAction = flightAction;\n\nvar flightPainter = function flightPainter(instance, engine) {\n  var ctx = engine.ctx;\n  var flight = engine.getImg(instance.imgName);\n  ctx.drawImage(flight, instance.x, instance.y, instance.width, instance.height);\n};\n\nexports.flightPainter = flightPainter;\n\nvar addFlight = function addFlight(engine, number, type) {\n  var flightCount = engine.getVariable(constant.flightCount);\n  if (flightCount === number) return;\n  var flight = new _cooljs.Instance({\n    name: \"flight_\".concat(number),\n    action: flightAction,\n    painter: flightPainter\n  });\n  flight.imgName = \"f\".concat(number);\n  flight.type = type;\n  engine.addInstance(flight, constant.flightLayer);\n  engine.setVariable(constant.flightCount, number);\n};\n\nexports.addFlight = addFlight;\n\n//# sourceURL=webpack:///./src/flight.js?");

/***/ }),

/***/ "./src/hook.js":
/*!*********************!*\
  !*** ./src/hook.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hookPainter = exports.hookAction = void 0;\n\nvar _utils = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n\nvar constant = _interopRequireWildcard(__webpack_require__(/*! ./constant */ \"./src/constant.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nvar hookAction = function hookAction(instance, engine, time) {\n  var ropeHeight = engine.getVariable(constant.ropeHeight);\n\n  if (!instance.ready) {\n    instance.x = engine.width / 2;\n    instance.y = ropeHeight * -1.5;\n    instance.ready = true;\n  }\n\n  engine.getTimeMovement(constant.hookUpMovement, [[instance.y, instance.y - ropeHeight]], function (value) {\n    instance.y = value;\n  }, {\n    after: function after() {\n      instance.y = ropeHeight * -1.5;\n    }\n  });\n  engine.getTimeMovement(constant.hookDownMovement, [[instance.y, instance.y + ropeHeight]], function (value) {\n    instance.y = value;\n  }, {\n    name: 'hook'\n  });\n  var initialAngle = engine.getVariable(constant.initialAngle);\n  instance.angle = initialAngle * (0, _utils.getSwingBlockVelocity)(engine, time);\n  instance.weightX = instance.x + Math.sin(instance.angle) * ropeHeight;\n  instance.weightY = instance.y + Math.cos(instance.angle) * ropeHeight;\n};\n\nexports.hookAction = hookAction;\n\nvar hookPainter = function hookPainter(instance, engine) {\n  var ctx = engine.ctx;\n  var ropeHeight = engine.getVariable(constant.ropeHeight);\n  var ropeWidth = ropeHeight * 0.1;\n  var hook = engine.getImg('hook');\n  ctx.save();\n  ctx.translate(instance.x, instance.y);\n  ctx.rotate(Math.PI * 2 - instance.angle);\n  ctx.translate(-instance.x, -instance.y);\n  engine.ctx.drawImage(hook, instance.x - ropeWidth / 2, instance.y, ropeWidth, ropeHeight + 5);\n  ctx.restore();\n};\n\nexports.hookPainter = hookPainter;\n\n//# sourceURL=webpack:///./src/hook.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _cooljs = __webpack_require__(/*! cooljs */ \"./node_modules/cooljs/index.js\");\n\nvar _utils = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n\nvar _background = __webpack_require__(/*! ./background */ \"./src/background.js\");\n\nvar _line = __webpack_require__(/*! ./line */ \"./src/line.js\");\n\nvar _cloud = __webpack_require__(/*! ./cloud */ \"./src/cloud.js\");\n\nvar _hook = __webpack_require__(/*! ./hook */ \"./src/hook.js\");\n\nvar _tutorial = __webpack_require__(/*! ./tutorial */ \"./src/tutorial.js\");\n\nvar constant = _interopRequireWildcard(__webpack_require__(/*! ./constant */ \"./src/constant.js\"));\n\nvar _animateFuncs = __webpack_require__(/*! ./animateFuncs */ \"./src/animateFuncs.js\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nwindow.TowerGame = function () {\n  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var width = option.width,\n      height = option.height,\n      canvasId = option.canvasId;\n  var game = new _cooljs.Engine({\n    canvasId: canvasId,\n    highResolution: true,\n    width: width,\n    height: height //soundOn\n\n  });\n\n  var pathGenerator = function pathGenerator(path) {\n    return \"./img/\".concat(path);\n  };\n\n  game.addImg('background', pathGenerator('background.png'));\n  game.addImg('hook', pathGenerator('hook.png'));\n  game.addImg('blockRope', pathGenerator('block-rope.png'));\n  game.addImg('block', pathGenerator('block.png'));\n  game.addImg('block-perfect', pathGenerator('block-perfect.png'));\n\n  for (var i = 1; i <= 8; i += 1) {\n    game.addImg(\"c\".concat(i), pathGenerator(\"c\".concat(i, \".png\")));\n  }\n\n  game.addLayer(constant.flightLayer);\n\n  for (var _i = 1; _i <= 7; _i += 1) {\n    game.addImg(\"f\".concat(_i), pathGenerator(\"f\".concat(_i, \".png\")));\n  }\n\n  game.swapLayer(0, 1);\n  game.addImg('tutorial', pathGenerator('tutorial.png'));\n  game.addImg('tutorial-arrow', pathGenerator('tutorial-arrow.png'));\n  game.addImg('heart', pathGenerator('heart.png'));\n  game.addImg('score', pathGenerator('score.png'));\n  game.addAudio('drop-perfect', pathGenerator('drop-perfect.mp3'));\n  game.addAudio('drop', pathGenerator('drop.mp3'));\n  game.addAudio('game-over', pathGenerator('game-over.mp3'));\n  game.addAudio('rotate', pathGenerator('rotate.mp3'));\n  game.addAudio('bgm', pathGenerator('bgm.mp3'));\n  game.setVariable(constant.blockWidth, game.width * 0.25);\n  game.setVariable(constant.blockHeight, game.getVariable(constant.blockWidth) * 0.71);\n  game.setVariable(constant.cloudSize, game.width * 0.3);\n  game.setVariable(constant.ropeHeight, game.height * 0.4);\n  game.setVariable(constant.blockCount, 0);\n  game.setVariable(constant.successCount, 0);\n  game.setVariable(constant.failedCount, 3 - lives);\n  game.setVariable(constant.gameScore, 0);\n  game.setVariable(constant.hardMode, false);\n  game.setVariable(constant.gameUserOption, option);\n\n  for (var _i2 = 1; _i2 <= 4; _i2 += 1) {\n    var cloud = new _cooljs.Instance({\n      name: \"cloud_\".concat(_i2),\n      action: _cloud.cloudAction,\n      painter: _cloud.cloudPainter\n    });\n    cloud.index = _i2;\n    cloud.count = 5 - _i2;\n    game.addInstance(cloud);\n  }\n\n  var line = new _cooljs.Instance({\n    name: 'line',\n    action: _line.lineAction,\n    painter: _line.linePainter\n  });\n  game.addInstance(line);\n  var hook = new _cooljs.Instance({\n    name: 'hook',\n    action: _hook.hookAction,\n    painter: _hook.hookPainter\n  });\n  game.addInstance(hook);\n  game.startAnimate = _animateFuncs.startAnimate;\n  game.endAnimate = _animateFuncs.endAnimate;\n  game.paintUnderInstance = _background.background;\n  game.addKeyDownListener('enter', function () {\n    if (game.debug) game.togglePaused();\n  });\n\n  game.touchStartListener = function () {\n    (0, _utils.touchEventHandler)(game);\n  };\n\n  game.playBgm = function () {\n    game.playAudio('bgm', true);\n  };\n\n  game.pauseBgm = function () {\n    game.pauseAudio('bgm');\n  };\n\n  game.start = function () {\n    var tutorial = new _cooljs.Instance({\n      name: 'tutorial',\n      action: _tutorial.tutorialAction,\n      painter: _tutorial.tutorialPainter\n    });\n    game.addInstance(tutorial);\n    var tutorialArrow = new _cooljs.Instance({\n      name: 'tutorial-arrow',\n      action: _tutorial.tutorialAction,\n      painter: _tutorial.tutorialPainter\n    }); // game.addInstance(tutorialArrow)\n\n    game.setTimeMovement(constant.bgInitMovement, 500);\n    game.setTimeMovement(constant.tutorialMovement, 500);\n    game.setVariable(constant.gameStartNow, true);\n  };\n\n  return game;\n};\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/line.js":
/*!*********************!*\
  !*** ./src/line.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.linePainter = exports.lineAction = void 0;\n\nvar _utils = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n\nvar constant = _interopRequireWildcard(__webpack_require__(/*! ./constant */ \"./src/constant.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nvar lineAction = function lineAction(instance, engine, time) {\n  var i = instance;\n\n  if (!i.ready) {\n    i.y = engine.getVariable(constant.lineInitialOffset);\n    i.ready = true;\n    i.collisionX = engine.width - engine.getVariable(constant.blockWidth);\n  }\n\n  engine.getTimeMovement(constant.moveDownMovement, [[instance.y, instance.y + (0, _utils.getMoveDownValue)(engine, {\n    pixelsPerFrame: function pixelsPerFrame(s) {\n      return s / 2;\n    }\n  })]], function (value) {\n    instance.y = value;\n  }, {\n    name: 'line'\n  });\n  var landBlockVelocity = (0, _utils.getLandBlockVelocity)(engine, time);\n  instance.x += landBlockVelocity;\n  instance.collisionX += landBlockVelocity;\n};\n\nexports.lineAction = lineAction;\n\nvar linePainter = function linePainter(instance, engine) {\n  var ctx = engine.ctx,\n      debug = engine.debug;\n\n  if (!debug) {\n    return;\n  }\n\n  ctx.save();\n  ctx.beginPath();\n  ctx.strokeStyle = 'red';\n  ctx.moveTo(instance.x, instance.y);\n  ctx.lineTo(instance.collisionX, instance.y);\n  ctx.lineWidth = 1;\n  ctx.stroke();\n  ctx.restore();\n};\n\nexports.linePainter = linePainter;\n\n//# sourceURL=webpack:///./src/line.js?");

/***/ }),

/***/ "./src/tutorial.js":
/*!*************************!*\
  !*** ./src/tutorial.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.tutorialPainter = exports.tutorialAction = void 0;\n\nvar _utils = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n\nvar constant = _interopRequireWildcard(__webpack_require__(/*! ./constant */ \"./src/constant.js\"));\n\nvar _cooljs = __webpack_require__(/*! cooljs */ \"./node_modules/cooljs/index.js\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nvar tutorialAction = function tutorialAction(instance, engine, time) {\n  var width = engine.width,\n      height = engine.height;\n  var name = instance.name;\n\n  if (!instance.ready) {\n    instance.ready = true;\n    var tutorialWidth = width * 0.2;\n    instance.updateWidth(tutorialWidth);\n    instance.height = tutorialWidth * 0.46;\n    instance.x = engine.calWidth - instance.calWidth;\n    instance.y = height * 0.45;\n\n    if (name !== 'tutorial') {\n      instance.y += instance.height * 1.2;\n    }\n  }\n\n  if (name !== 'tutorial') {\n    instance.y += Math.cos(time / 200) * instance.height * 0.01;\n  }\n};\n\nexports.tutorialAction = tutorialAction;\n\nvar tutorialPainter = function tutorialPainter(instance, engine) {\n  // console.log(instance)\n  if (engine.checkTimeMovement(constant.tutorialMovement)) {\n    return;\n  }\n\n  if ((0, _utils.getHookStatus)(engine) !== constant.hookNormal) {\n    return;\n  }\n\n  var ctx = engine.ctx;\n  var name = instance.name;\n  var t = engine.getImg(name);\n  ctx.drawImage(t, instance.x * 0.5, instance.y * 1, instance.width * 3, instance.height * 3);\n};\n\nexports.tutorialPainter = tutorialPainter;\n\n//# sourceURL=webpack:///./src/tutorial.js?");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.drawYellowString = exports.addScore = exports.addFailedCount = exports.addSuccessCount = exports.touchEventHandler = exports.getHookStatus = exports.getLandBlockVelocity = exports.getSwingBlockVelocity = exports.getAngleBase = exports.getMoveDownValue = exports.checkMoveDown = void 0;\n\nvar constant = _interopRequireWildcard(__webpack_require__(/*! ./constant */ \"./src/constant.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nvar checkMoveDown = function checkMoveDown(engine) {\n  return engine.checkTimeMovement(constant.moveDownMovement);\n};\n\nexports.checkMoveDown = checkMoveDown;\n\nvar getMoveDownValue = function getMoveDownValue(engine, store) {\n  var pixelsPerFrame = store ? store.pixelsPerFrame : engine.pixelsPerFrame.bind(engine);\n  var successCount = engine.getVariable(constant.successCount);\n  var calHeight = engine.getVariable(constant.blockHeight) * 2;\n\n  if (successCount <= 4) {\n    return pixelsPerFrame(calHeight * 1.25);\n  }\n\n  return pixelsPerFrame(calHeight);\n};\n\nexports.getMoveDownValue = getMoveDownValue;\n\nvar getAngleBase = function getAngleBase(engine) {\n  var successCount = engine.getVariable(constant.successCount);\n  var gameScore = engine.getVariable(constant.gameScore);\n\n  var _engine$getVariable = engine.getVariable(constant.gameUserOption),\n      hookAngle = _engine$getVariable.hookAngle;\n\n  if (hookAngle) {\n    return hookAngle(successCount, gameScore);\n  }\n\n  if (engine.getVariable(constant.hardMode)) {\n    return 90;\n  }\n\n  switch (true) {\n    case successCount < 10:\n      return 30;\n\n    case successCount < 20:\n      return 60;\n\n    default:\n      return 80;\n  }\n};\n\nexports.getAngleBase = getAngleBase;\n\nvar getSwingBlockVelocity = function getSwingBlockVelocity(engine, time) {\n  var successCount = engine.getVariable(constant.successCount);\n  var gameScore = engine.getVariable(constant.gameScore);\n\n  var _engine$getVariable2 = engine.getVariable(constant.gameUserOption),\n      hookSpeed = _engine$getVariable2.hookSpeed;\n\n  if (hookSpeed) {\n    return hookSpeed(successCount, gameScore);\n  }\n\n  var hard;\n\n  switch (true) {\n    case successCount < 1:\n      hard = 0;\n      break;\n\n    case successCount < 10:\n      hard = 1;\n      break;\n\n    case successCount < 20:\n      hard = 0.8;\n      break;\n\n    case successCount < 30:\n      hard = 0.7;\n      break;\n\n    default:\n      hard = 0.74;\n      break;\n  }\n\n  if (engine.getVariable(constant.hardMode)) {\n    hard = 1.1;\n  }\n\n  return Math.sin(time / (200 / hard));\n};\n\nexports.getSwingBlockVelocity = getSwingBlockVelocity;\n\nvar getLandBlockVelocity = function getLandBlockVelocity(engine, time) {\n  var successCount = engine.getVariable(constant.successCount);\n  var gameScore = engine.getVariable(constant.gameScore);\n\n  var _engine$getVariable3 = engine.getVariable(constant.gameUserOption),\n      landBlockSpeed = _engine$getVariable3.landBlockSpeed;\n\n  if (landBlockSpeed) {\n    return landBlockSpeed(successCount, gameScore);\n  }\n\n  var width = engine.width;\n  var hard;\n\n  switch (true) {\n    case successCount < 5:\n      hard = 0;\n      break;\n\n    case successCount < 13:\n      hard = 0.001;\n      break;\n\n    case successCount < 23:\n      hard = 0.002;\n      break;\n\n    default:\n      hard = 0.003;\n      break;\n  }\n\n  return Math.cos(time / 200) * hard * width;\n};\n\nexports.getLandBlockVelocity = getLandBlockVelocity;\n\nvar getHookStatus = function getHookStatus(engine) {\n  if (engine.checkTimeMovement(constant.hookDownMovement)) {\n    return constant.hookDown;\n  }\n\n  if (engine.checkTimeMovement(constant.hookUpMovement)) {\n    return constant.hookUp;\n  }\n\n  return constant.hookNormal;\n};\n\nexports.getHookStatus = getHookStatus;\n\nvar touchEventHandler = function touchEventHandler(engine) {\n  if (!engine.getVariable(constant.gameStartNow)) return;\n\n  if (engine.debug && engine.paused) {\n    return;\n  }\n\n  if (getHookStatus(engine) !== constant.hookNormal) {\n    return;\n  }\n\n  engine.removeInstance('tutorial');\n  engine.removeInstance('tutorial-arrow');\n  var b = engine.getInstance(\"block_\".concat(engine.getVariable(constant.blockCount)));\n\n  if (b && b.status === constant.swing) {\n    engine.setTimeMovement(constant.hookUpMovement, 500);\n    b.status = constant.beforeDrop;\n  }\n};\n\nexports.touchEventHandler = touchEventHandler;\n\nvar addSuccessCount = function addSuccessCount(engine) {\n  var _engine$getVariable4 = engine.getVariable(constant.gameUserOption),\n      setGameSuccess = _engine$getVariable4.setGameSuccess;\n\n  var lastSuccessCount = engine.getVariable(constant.successCount);\n  var success = lastSuccessCount + 1;\n  engine.setVariable(constant.successCount, success);\n\n  if (engine.getVariable(constant.hardMode)) {\n    engine.setVariable(constant.ropeHeight, engine.height * engine.utils.random(0.35, 0.55));\n  }\n\n  if (score > 100) {\n    if (setGameSuccess) setGameSuccess(success);\n  }\n};\n\nexports.addSuccessCount = addSuccessCount;\n\nvar addFailedCount = function addFailedCount(engine) {\n  var _engine$getVariable5 = engine.getVariable(constant.gameUserOption),\n      setGameFailed = _engine$getVariable5.setGameFailed;\n\n  var lastFailedCount = engine.getVariable(constant.failedCount);\n  var failed = lastFailedCount + 1;\n  engine.setVariable(constant.failedCount, failed);\n  engine.setVariable(constant.perfectCount, 0);\n  if (setGameFailed) setGameFailed(failed);\n\n  if (failed >= 3) {\n    engine.pauseAudio('bgm');\n    engine.playAudio('game-over');\n    engine.setVariable(constant.gameStartNow, false);\n  }\n};\n\nexports.addFailedCount = addFailedCount;\n\nvar addScore = function addScore(engine, isPerfect) {\n  var _engine$getVariable6 = engine.getVariable(constant.gameUserOption),\n      setGameScore = _engine$getVariable6.setGameScore,\n      successScore = _engine$getVariable6.successScore,\n      perfectScore = _engine$getVariable6.perfectScore;\n\n  var lastPerfectCount = engine.getVariable(constant.perfectCount, 0);\n  var lastGameScore = engine.getVariable(constant.gameScore);\n  var perfect = isPerfect ? lastPerfectCount + 1 : 0;\n  var score = lastGameScore + (successScore || 25) + (perfectScore || 25) * perfect;\n  engine.setVariable(constant.gameScore, score);\n  engine.setVariable(constant.perfectCount, perfect);\n  if (setGameScore) setGameScore(score);\n};\n\nexports.addScore = addScore;\n\nvar drawYellowString = function drawYellowString(engine, option) {\n  var string = option.string,\n      size = option.size,\n      x = option.x,\n      y = option.y,\n      textAlign = option.textAlign;\n  var ctx = engine.ctx;\n  var fontName = 'wenxue';\n  var fontSize = size;\n  var lineSize = fontSize * 0.1;\n  ctx.save();\n  ctx.beginPath();\n  var gradient = ctx.createLinearGradient(0, 0, 0, y);\n  gradient.addColorStop(0, '#FAD961');\n  gradient.addColorStop(1, '#F76B1C');\n  ctx.fillStyle = gradient;\n  ctx.lineWidth = lineSize;\n  ctx.strokeStyle = '#FFF';\n  ctx.textAlign = textAlign || 'center';\n  ctx.font = \"\".concat(fontSize, \"px \").concat(fontName);\n  ctx.strokeText(string, x, y);\n  ctx.fillText(string, x, y);\n  ctx.restore();\n};\n\nexports.drawYellowString = drawYellowString;\n\n//# sourceURL=webpack:///./src/utils.js?");

/***/ })

/******/ });