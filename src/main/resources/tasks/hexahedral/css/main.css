:root {
  --global-opacity: 0.95;
  --level-transform: translate(-50%, -50%) rotateX(45deg) rotateZ(45deg);
  --ui-border: 0.2rem solid white;

  /* Colors */
  --beige: #CCB6A0;
  --blue: #00B3C5;
  --dark-gray: #433C38;
  --green: #6EBD4B;
  --pink: #D32D8F;

  /* Sizes */
  --cell-size: 9rem;
  --counter-size: 2rem;
  --level-button-size: 2rem;
  --player-size: 4rem;
  --square-size: 10rem;
}

@keyframes breathe {
  50% { transform: translateZ(8rem) scale(0.95); }
}

@keyframes player-bob {
  50% { transform: translateZ(14rem); }
}

*,
*::before,
*::after {
  box-sizing: border-box;
  outline: none;
}

html, body {
  height: 100%;
  margin: 0;
  padding: 0;
  width: 100%;
}

html {
  /* Sets up font size so that 1rem = 10px. */
  font-size: 62.5%;
}

body {
  background-color: var(--beige);
  background-image: radial-gradient(circle, var(--beige), white);
  display: flex;
  flex-direction: column;
  font-family: -apple-system, "Helvetica Neue", Helvetica, Arial, sans-serif;
  opacity: 1;
  overflow: hidden;
  padding: 0;
  transition: opacity 1s;
}

button {
  cursor: pointer;
}

header {
  background-color: var(--blue);
  border: var(--ui-border);
  border-radius: var(--counter-size);
  flex-shrink: 0;
  height: var(--counter-size);
  margin: 0 auto;
  margin-top: 2rem;
  opacity: var(--global-opacity);
  overflow: hidden;
}

footer {
  color: white;
  display: block;
  flex-shrink: 0;
  font-size: 1.2rem;
  font-weight: 300;
  margin-bottom: 2rem;
  margin-top: auto;
  opacity: var(--global-opacity);
  text-align: center;

  & a {
    color: white;
    border-bottom: 0.2rem solid transparent;
    font-weight: 500;
    text-decoration: none;
    transition: border-bottom-color 0.1s;

    &:hover {
      border-bottom-color: white;
    }
  }
}

main {
  flex-grow: 1;
  position: relative;
}

nav {
  display: flex;
  flex-direction: row;
  flex-shrink: 0;
  flex-wrap: wrap;
  justify-content: center;
  margin-bottom: 1rem;
  margin-left: auto;
  margin-right: auto;
  opacity: var(--global-opacity);
  text-align: center;
}

#game {
  align-items: center;
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  justify-content: space-between;
  transition: filter 0.5s;

  &.won {
    filter: blur(0.3rem);
  }

  &.lost {
    filter: blur(0.3rem) grayscale(100%);
  }
}

.cell,
.cell::after,
.cell::before {
  /* Helps hide the seams between the planes. */
  box-shadow: inset 0 0 0 0.2rem hsla(0, 0%, 100%, 1);
  content: '';
  height: var(--cell-size);
  opacity: var(--global-opacity);
  position: absolute;
  touch-action: manipulation;
  transition: all 0.1s;
  transform-style: preserve-3d;
  width: var(--cell-size);
}

.cell {
  margin: calc(var(--square-size) - var(--cell-size));
  transform: translateZ(5rem);
  transform-style: preserve-3d;

  /* Left */
  &::after {
    transform: rotateX(-90deg) translateY(var(--cell-size));
    transform-origin: 100% 100%;
  }

  /* Right */
  &::before {
    transform: rotateY(90deg) translateX(var(--cell-size));
    transform-origin: 100% 0;
  }

  &.pressed {
    background-color: var(--blue);

    &::after {
      background-color: color(var(--blue) tint(7%));
    }

    &::before {
      background-color: color(var(--blue) tint(14%));
    }
  }

  &.unpressed {
    animation: breathe 2s ease-in-out infinite;
    background-color: var(--pink);
    transform: translateZ(8rem);

    &::after {
      background-color: color(var(--pink) tint(7%));
    }

    &::before {
      background-color: color(var(--pink) tint(14%));
    }
  }

  &.broken {
    background-color: var(--beige);

    &::after {
      background-color: color(var(--beige) tint(7%));
    }

    &::before {
      background-color: color(var(--beige) tint(14%));
    }
  }
}

.difficulty-buttons {
  animation: breathe 2s ease-in-out infinite;
  margin: auto;
  opacity: var(--global-opacity);
  padding: 2rem;
  text-align: center;

  &:hover {
    animation-play-state: paused;
  }
}

.difficulty-button {
  appearance: none;
  background-color: var(--blue);
  border: var(--ui-border);
  border-radius: 2.5rem;
  color: white;
  display: block;
  padding: 1rem 6rem;
  font-size: 2rem;
  font-weight: 500;
  height: auto;
  margin-bottom: 1rem;
  transition: transform 0.1s;
  width: 100%;

  &:hover {
    transform: scale(1.1);
  }

  &:nth-child(1) {
    background-color: var(--green);
  }

  &:nth-child(2) {
    background-color: var(--blue);
  }

  &:nth-child(3) {
    background-color: var(--pink);
  }

  &:last-child {
    margin-bottom: 0;
  }
}

.difficulty-row {
  flex-shrink: 0;
  white-space: nowrap;
}

.difficulty-selector {
  appearance: none;
  background-color: transparent;
  border: var(--ui-border);
  border-radius: 1rem;
  color: white;
  flex-shrink: 0;
  font-weight: 500;
  height: var(--level-button-size);
  margin: 0 0.4rem;
  margin-bottom: 1rem;
  padding: 0 1rem;
  transition: transform 0.1s;

  &:hover {
    transform: scale(1.1);
  }
}

.level {
  left: 50%;
  margin: auto;
  position: absolute;
  top: 50%;
  transform: var(--level-transform);
  transform-style: preserve-3d;
  transition: all 0.2s;
}

.level-button {
  background-color: transparent;
  border: var(--ui-border);
  border-radius: 50%;
  cursor: default;
  height: var(--level-button-size);
  padding: 0;
  margin: 0 0.4rem;
  margin-bottom: 1rem;
  transition: all 0.1s;
  width: var(--level-button-size);

  /* Hide text. */
  text-indent: 100%;
  overflow: hidden;
  white-space: nowrap;

  &.complete {
    background-color: var(--blue);
  }

  &.current {
    background-color: var(--pink);
  }

  &.complete,
  &.current {
    cursor: pointer;

    &:hover {
      transform: scale(1.2);
    }
  }
}

.player,
.player::after,
.player::before {
  /* Helps hide the seams between the planes. */
  box-shadow: inset 0 0 0 0.2rem hsla(0, 0%, 100%, 1);
  content: '';
  height: var(--player-size);
  opacity: var(--global-opacity);
  position: absolute;
  transition: all 0.1s;
  width: var(--player-size);
}

.player {
  animation: player-bob 2s ease-in-out infinite;
  background-color: var(--green);
  margin: 3.5rem;
  pointer-events: none;
  transform-style: preserve-3d;
  transform: translateZ(12rem);
  transition: all 0.2s;

  /* Left */
  &::after {
    background-color: color(var(--green) shade(7%));
    transform: rotateX(-90deg) translateY(var(--player-size));
    transform-origin: 100% 100%;
  }

  /* Right */
  &::before {
    background-color: color(var(--green) shade(14%));
    transform: rotateY(90deg) translateX(var(--player-size));
    transform-origin: 100% 0;
  }
}

.progress {
  background-color: var(--pink);
  height: 100%;
  transition: width 0.1s;
}


/* Media Queries */

@media (height <= 700px) {
  /* After removing the footer, header + nav take up 80px. */
  #game:not(.main-menu) + footer {
    display: none;
  }

  .hard   .level { transform: var(--level-transform) scale3d(0.92, 0.92, 0.92); }
}

@media (width <= 700px) {
  .hard   .level { transform: var(--level-transform) scale3d(0.84, 0.84, 0.84); }
}

@media (height <= 600px) {
  .medium .level { transform: var(--level-transform) scale3d(0.88, 0.88, 0.88); }
  .hard   .level { transform: var(--level-transform) scale3d(0.74, 0.74, 0.74); }
}

@media (width <= 600px) {
  .medium .level { transform: var(--level-transform) scale3d(0.88, 0.88, 0.88); }
  .hard   .level { transform: var(--level-transform) scale3d(0.70, 0.70, 0.70); }
}

@media (height <= 500px) {
  .easy   .level { transform: var(--level-transform) scale3d(0.83, 0.83, 0.83); }
  .medium .level { transform: var(--level-transform) scale3d(0.66, 0.66, 0.66); }
  .hard   .level { transform: var(--level-transform) scale3d(0.55, 0.55, 0.55); }
}

@media (width <= 500px) {
  .easy   .level { transform: var(--level-transform) scale3d(0.94, 0.94, 0.94); }
  .medium .level { transform: var(--level-transform) scale3d(0.70, 0.70, 0.70); }
  .hard   .level { transform: var(--level-transform) scale3d(0.56, 0.56, 0.56); }
}

@media (width <= 400px) {
  .easy   .level { transform: var(--level-transform) scale3d(0.70, 0.70, 0.70); }
  .medium .level { transform: var(--level-transform) scale3d(0.53, 0.53, 0.53); }
  .hard   .level { transform: var(--level-transform) scale3d(0.42, 0.42, 0.42); }
}

@media (height <= 400px) {
  .easy   .level { transform: var(--level-transform) scale3d(0.55, 0.55, 0.55); }
  .medium .level { transform: var(--level-transform) scale3d(0.44, 0.44, 0.44); }
  .hard   .level { transform: var(--level-transform) scale3d(0.37, 0.37, 0.37); }
}
